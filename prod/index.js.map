{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap 9d1880c6c6a8d3370f00","webpack:///./src/index.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","vectorC","x","y","z","_this","this","X","Y","Z","Length","Math","sqrt","Normalize","length","vector","Abs","abs","Add","other","Max","max","Mult","factor","Subtract","ZeroMax","MaxCoord","Dot","v","bigVector","SphereForm","position","size","UsdBoxForm","Sphere","UsdBox","Union","first","second","min","marcheRay","direction","distanceFuntion","nbSteps","backgroundColor","i","distance","calculateNormal","distanceFunction","delta","shade","lightPosition","lightDir","dot","diffuse","light","getColor","rayDirection","marcheResult","marcheScreenOrthographic","corner","xStep","yStep","nbX","nbY","result","xArr","push","drawOnScreen","data","canvas","document","createElement","body","appendChild","width","height","context","getContext","imagedata","createImageData","pixelindex","color","putImageData","scene","ballScreen"],"mappings":"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","file":"index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar vectorC = function (x, y, z) {\r\n\t    var _this = this;\r\n\t    this.X = x;\r\n\t    this.Y = y;\r\n\t    this.Z = z;\r\n\t    this.Length = function () { return Math.sqrt(_this.X * _this.X + _this.Y * _this.Y + _this.Z * _this.Z); };\r\n\t    this.Normalize = function () {\r\n\t        var length = _this.Length();\r\n\t        return vector(_this.X / length, _this.Y / length, _this.Z / length);\r\n\t    };\r\n\t    this.Abs = function () { return vector(Math.abs(_this.X), Math.abs(_this.Y), Math.abs(_this.Z)); };\r\n\t    this.Add = function (other) { return vector(_this.X + other.X, _this.Y + other.Y, _this.Z + other.Z); };\r\n\t    this.Max = function (other) { return vector(Math.max(_this.X, other.X), Math.max(_this.Y, other.Y), Math.max(_this.Z, other.Z)); };\r\n\t    this.Mult = function (factor) { return vector(_this.X * factor, _this.Y * factor, _this.Z * factor); };\r\n\t    this.Subtract = function (other) { return vector(_this.X - other.X, _this.Y - other.Y, _this.Z - other.Z); };\r\n\t    this.ZeroMax = function () { return vector(Math.max(_this.X, 0), Math.max(_this.Y, 0), Math.max(_this.Z, 0)); };\r\n\t    this.MaxCoord = function () { return Math.max(_this.X, _this.Y, _this.Z); };\r\n\t    this.Dot = function (other) { return _this.X * other.X + _this.Y * other.Y + _this.Z * other.Z; };\r\n\t};\r\n\tvar vector = function (x, y, z) {\r\n\t    var v = new vectorC(x, y, z);\r\n\t    return v;\r\n\t};\r\n\tdebugger;\r\n\tvar bigVector = vector(1, 2, 3);\r\n\tbigVector.Mult(4);\r\n\tvar SphereForm = function (position, size) { return position.Length() - size; };\r\n\tvar UsdBoxForm = function (position, size) { return position.Abs().Subtract(size).ZeroMax().Length(); };\r\n\tvar RoundBoxForm = function (position, size, radius) { return UsdBoxForm(position, size) - radius; };\r\n\tvar SdBoxForm = function (position, size) { var d = position.Abs().Subtract(size); return Math.min(d.MaxCoord(), 0) + d.ZeroMax().Length(); };\r\n\tvar Sphere = function (size) { return function (position) { return SphereForm(position, size); }; };\r\n\tvar UsdBox = function (size) { return function (position) { return UsdBoxForm(position, size); }; };\r\n\tvar RoundBox = function (size, radius) { return function (position) { return RoundBoxForm(position, size, radius); }; };\r\n\tvar SdBox = function (size) { return function (position) { return SdBoxForm(position, size); }; };\r\n\tvar Union = function (first, second) { return function (position) { return Math.min(first(position), second(position)); }; };\r\n\tvar Intersection = function (first, second) { return function (position) { return Math.max(first(position), second(position)); }; };\r\n\tvar marcheRay = function (position, direction, distanceFuntion, nbSteps, backgroundColor) {\r\n\t    for (var i = 0; i < nbSteps; i++) {\r\n\t        var distance = distanceFuntion(position);\r\n\t        if (distance > 10)\r\n\t            return undefined;\r\n\t        if (distance < 0.0001)\r\n\t            break;\r\n\t        position = position.Add(direction.Mult(distance));\r\n\t    }\r\n\t    return { position: position, nbSteps: i };\r\n\t};\r\n\tvar calculateNormal = function (position, distanceFunction) {\r\n\t    var delta = 0.001;\r\n\t    var twoDelta = delta * 2;\r\n\t    return vector((distanceFunction(position.Add(vector(-delta, 0, 0))) - distanceFunction(position.Add(vector(delta, 0, 0)))), (distanceFunction(position.Add(vector(0, -delta, 0))) - distanceFunction(position.Add(vector(0, delta, 0)))), (distanceFunction(position.Add(vector(0, 0, -delta))) - distanceFunction(position.Add(vector(0, 0, delta))))).Normalize();\r\n\t};\r\n\tvar shade = function (position, distanceFunction, lightPosition) {\r\n\t    var lightDir = lightPosition.Subtract(position).Normalize();\r\n\t    var dot = calculateNormal(position, distanceFunction).Dot(lightDir);\r\n\t    var diffuse = vector(1, 1, 1);\r\n\t    var light = Math.max(dot, 0.2);\r\n\t    return diffuse.Mult(light);\r\n\t};\r\n\tvar getColor = function (position, rayDirection, distanceFunction, nbSteps, backgroundColor) {\r\n\t    var marcheResult = marcheRay(position, rayDirection, distanceFunction, nbSteps, backgroundColor);\r\n\t    if (!marcheResult)\r\n\t        return backgroundColor;\r\n\t    return shade(marcheResult.position, distanceFunction, vector(0, -15, 0));\r\n\t};\r\n\tvar marcheScreenOrthographic = function (distanceFunction, corner, xStep, yStep, nbX, nbY, rayDirection, nbSteps) {\r\n\t    var result = [];\r\n\t    for (var x = 0; x < nbX; x++) {\r\n\t        var xArr = [];\r\n\t        for (var y = 0; y < nbY; y++) {\r\n\t            var position = corner.Add(xStep.Mult(x)).Add(yStep.Mult(y));\r\n\t            xArr.push(getColor(position, rayDirection, distanceFunction, nbSteps, vector(0, 0, 0)));\r\n\t        }\r\n\t        result.push(xArr);\r\n\t    }\r\n\t    return result;\r\n\t};\r\n\tvar drawOnScreen = function (data) {\r\n\t    var canvas = document.createElement('canvas');\r\n\t    document.body.appendChild(canvas);\r\n\t    canvas.width = data.length;\r\n\t    var width = canvas.width;\r\n\t    canvas.height = width == 0 ? 0 : data[0].length;\r\n\t    var height = canvas.height;\r\n\t    var context = canvas.getContext(\"2d\");\r\n\t    var imagedata = context.createImageData(width, height);\r\n\t    for (var x = 0; x < width; x++) {\r\n\t        for (var y = 0; y < height; y++) {\r\n\t            var pixelindex = (y * width + (width - 1 - x)) * 4;\r\n\t            var color = data[x][y];\r\n\t            imagedata.data[pixelindex] = color.X * 255;\r\n\t            imagedata.data[pixelindex + 1] = color.Y * 255;\r\n\t            imagedata.data[pixelindex + 2] = color.Z * 255;\r\n\t            imagedata.data[pixelindex + 3] = 255;\r\n\t            if (y == height - 1 || x == width - 1) {\r\n\t                imagedata.data[pixelindex] = 255;\r\n\t                imagedata.data[pixelindex + 1] = 0;\r\n\t                imagedata.data[pixelindex + 2] = 255;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    context.putImageData(imagedata, 0, 0);\r\n\t};\r\n\tvar scene = Union(Sphere(6), UsdBox(vector(5, 5, 5)));\r\n\tvar ballScreen = marcheScreenOrthographic(scene, vector(-10, -10, -10), vector(.04, 0, 0), vector(0, .04, 0), 600, 600, vector(0.01, 0.01, 1).Normalize(), 100);\r\n\tdrawOnScreen(ballScreen);\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9d1880c6c6a8d3370f00","interface IVector3{\r\n    X:number;\r\n    Y:number;\r\n    Z:number;\r\n    Length:()=>number\r\n    Abs: ()=> IVector3\r\n    Add: (other: IVector3)=> IVector3\r\n    Max: (other: IVector3)=> IVector3\r\n    Mult: (factor: number)=> IVector3\r\n    Subtract: (other: IVector3)=> IVector3\r\n    ZeroMax: ()=> IVector3\r\n    MaxCoord: ()=> number\r\n    Normalize: ()=>IVector3\r\n    Dot: (other: IVector3)=> number\r\n    \r\n}\r\n//: ()=>IVector3 \r\nconst vectorC= function(x,y,z){\r\n        this.X= x;\r\n        this.Y=y;\r\n        this.Z=z;\r\n        this.Length= ()=>Math.sqrt(this.X*this.X+this.Y*this.Y+this.Z*this.Z);\r\n        this.Normalize=()=>{\r\n            let length= this.Length();\r\n            return vector(this.X/length,this.Y/length, this.Z/length);\r\n        }\r\n        this.Abs= ()=> vector(Math.abs(this.X),Math.abs(this.Y),Math.abs(this.Z));\r\n        this.Add= (other:IVector3)=> vector(this.X+ other.X, this.Y+other.Y, this.Z + other.Z);\r\n        this.Max= (other:IVector3)=> vector(Math.max(this.X,other.X),Math.max(this.Y,other.Y),Math.max(this.Z,other.Z));\r\n        this.Mult= (factor:number)=> vector(this.X* factor, this.Y* factor, this.Z* factor);\r\n        this.Subtract= (other:IVector3)=> vector(this.X- other.X, this.Y-other.Y, this.Z- other.Z);\r\n        this.ZeroMax= ()=> vector(Math.max(this.X,0),Math.max(this.Y,0),Math.max(this.Z,0));\r\n        this.MaxCoord= ()=> Math.max(this.X,this.Y,this.Z);\r\n        this.Dot= (other: IVector3)=> this.X*other.X + this.Y*other.Y + this.Z*other.Z; \r\n    };\r\n\r\nconst vector= (x:number,y:number,z:number):IVector3=>{\r\n  let v=  new vectorC(x,y,z);\r\n  return v;\r\n}\r\ndebugger;\r\nlet bigVector= vector(1,2,3);\r\nbigVector.Mult(4);\r\n\r\n\r\nconst SphereForm= (position: IVector3, size:number)=> position.Length() - size;\r\nconst UsdBoxForm  = (position: IVector3, size:IVector3)=> position.Abs().Subtract(size).ZeroMax().Length();\r\nconst RoundBoxForm=  (position: IVector3, size:IVector3, radius:number)=> UsdBoxForm(position,size)-radius;\r\nconst SdBoxForm = (position: IVector3, size: IVector3) => { const d = position.Abs().Subtract(size); return Math.min(d.MaxCoord(),0)+ d.ZeroMax().Length()}\r\n\r\n\r\nconst Sphere=  (size:number)=> (position:IVector3) => SphereForm(position,size);\r\nconst UsdBox= (size:IVector3) => (position:IVector3) => UsdBoxForm(position,size);\r\nconst RoundBox = (size:IVector3, radius:number) => (position:IVector3) => RoundBoxForm(position,size,radius);\r\nconst SdBox= (size:IVector3)=>(position:IVector3) => SdBoxForm(position,size);\r\nconst Union = (first:(position:IVector3)=>number,second:(position:IVector3)=>number)=>(position:IVector3)=>Math.min(first(position),second(position));\r\nconst Intersection = (first:(position:IVector3)=>number,second:(position:IVector3)=>number)=>(position:IVector3)=>Math.max(first(position),second(position));\r\n\r\n\r\nconst marcheRay=(position: IVector3, direction: IVector3, distanceFuntion: (p:IVector3)=> number, nbSteps:number,backgroundColor: IVector3) =>\r\n{\r\n   for(var i=0;i < nbSteps;i++){\r\n     const distance =  distanceFuntion(position);\r\n     if(distance > 10)\r\n       return undefined;\r\n     if(distance < 0.0001)\r\n       break;\r\n     position = position.Add(direction.Mult(distance));\r\n   }\r\n   return {position: position, nbSteps: i};\r\n}\r\n\r\nconst calculateNormal=(position:IVector3, distanceFunction: (p: IVector3)=> number)=>{\r\n    let delta = 0.001;\r\n    let twoDelta = delta*2;\r\n    return vector(\r\n        (distanceFunction(position.Add(vector(-delta,0,0)))-distanceFunction(position.Add(vector(delta,0,0)))),\r\n        (distanceFunction(position.Add(vector(0,-delta,0)))-distanceFunction(position.Add(vector(0,delta,0)))),\r\n        (distanceFunction(position.Add(vector(0,0,-delta)))-distanceFunction(position.Add(vector(0,0,delta))))\r\n    ).Normalize();\r\n}\r\n\r\nconst shade = (position:IVector3, distanceFunction: (p:IVector3)=>number,lightPosition: IVector3)=>{\r\n    let lightDir = lightPosition.Subtract(position).Normalize();\r\n    \r\n    let dot = calculateNormal(position,distanceFunction).Dot(lightDir);\r\n    let diffuse= vector(1,1,1);\r\n    let light = Math.max(dot,0.2);\r\n    return diffuse.Mult(light);\r\n    //return lightDir;\r\n}\r\n\r\nconst getColor= (position,rayDirection,distanceFunction,nbSteps,backgroundColor):IVector3=>{\r\n    const marcheResult= marcheRay(position,rayDirection,distanceFunction,nbSteps,backgroundColor);\r\n    if(!marcheResult)\r\n      return backgroundColor;\r\n    return shade(marcheResult.position,distanceFunction,vector(0,-15,0));\r\n    //return marcheResult.position.Mult(1/8);\r\n    //return calculateNormal(marcheResult.position,distanceFunction).Add(vector(1,1,1)).Mult(.5);    \r\n}\r\n\r\nconst marcheScreenOrthographic=(distanceFunction: (p:IVector3)=> number,corner:IVector3, xStep:IVector3, yStep:IVector3, nbX:number, nbY:number, rayDirection:IVector3, nbSteps: number)=>{\r\n    let result:IVector3[][]=[];\r\n    for(let x = 0; x < nbX; x++){\r\n        let xArr:IVector3[]= [];\r\n        for(let y = 0; y < nbY; y++){\r\n          const position =  corner.Add(xStep.Mult(x)).Add(yStep.Mult(y));\r\n          xArr.push(getColor(position,rayDirection,distanceFunction,nbSteps,vector(0,0,0)));\r\n        }   \r\n        result.push(xArr);\r\n    }\r\n    return result;      \r\n}\r\n\r\n\r\n\r\nconst drawOnScreen= (data: IVector3[][])=>{\r\n    let canvas = document.createElement('canvas');\r\n    document.body.appendChild(canvas); // adds the canvas to the body element\r\n    canvas.width= data.length;\r\n    let width = canvas.width;\r\n    canvas.height = width == 0? 0 : data[0].length; \r\n    let height = canvas.height;\r\n    let context = canvas.getContext(\"2d\");\r\n    let imagedata = context.createImageData(width, height);\r\n    for(let x = 0; x < width; x++){\r\n        for(let y = 0; y < height; y++){\r\n            let pixelindex = (y * width + (width - 1 - x)) * 4;\r\n            let color = data[x][y];\r\n            imagedata.data[pixelindex] = color.X*255;     // Red\r\n            imagedata.data[pixelindex+1] =color.Y*255; // Green\r\n            imagedata.data[pixelindex+2] = color.Z*255;  // Blue\r\n            imagedata.data[pixelindex+3] = 255;   // Alpha\r\n            if(y == height - 1 ||x == width - 1)\r\n            {imagedata.data[pixelindex] = 255;     // Red\r\n            imagedata.data[pixelindex+1] = 0;//color.Y*255; // Green\r\n            imagedata.data[pixelindex+2] = 255;//color.Z*255;  // Blue\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    context.putImageData(imagedata,0,0);\r\n}\r\nconst scene = \r\n    //Intersection(\r\n        Union(\r\n            Sphere(6)\r\n            ,UsdBox(vector(5,5,5)))\r\n        //UsdBox(vector(6,4.5,5)));\r\nconst ballScreen = marcheScreenOrthographic(scene,vector(-10,-10,-10),vector(.04,0,0),vector(0,.04,0),600,600,vector(0.01,0.01,1).Normalize(),100);\r\n\r\ndrawOnScreen(ballScreen);\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts"],"sourceRoot":""}